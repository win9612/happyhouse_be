<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rest.api.model.mapper.board.QnaCommentMapper">
<!-- 코멘트 등록-->
    <insert id="addComment" parameterType="com.rest.api.model.dto.board.QnaCommentDto">
        insert into qna_comment
            (c_no, b_no, c_writer_email, c_writer_name, c_content, c_write_date)
        values(#{cNo}, #{bNo}, #{cWriterEmail}, #{cWriterName}, #{cContent}, now())
    </insert>

<!-- 한 게시물의 코멘트 전체 목록-->
    <select id="getCommentList" parameterType="int" resultType="com.rest.api.model.dto.board.QnaCommentDto">
        select c_no as cNo, c_writer_email as cWriterEmail, c_writer_name as cWriterName,
            c_content as cContent, c_write_date as cWriteDate, c_modify_date as cModifyDate
        from qna_comment
        where b_no = #{bNo}
    </select>

<!--  코멘트 하나 반환-->
    <select id="getComment" parameterType="int" resultType="com.rest.api.model.dto.board.QnaCommentDto">
        select c_no as cNo, c_writer_email as cWriterEmail, c_writer_name as cWriterName,
               c_content as cContent, c_write_date as cWriteDate, c_modify_date as cModifyDate
        from qna_comment
        where c_no=#{cNo}
    </select>

<!--  코멘트 수정-->
    <update id="updateComment" parameterType="com.rest.api.model.dto.board.QnaCommentDto">
        update qna_comment
        set
            c_writer_email = #{cWriterEmail},
            c_writer_name = #{cWriterName},
            c_title = #{cTitle},
            c_content = #{cContent},
            c_modify_date = now()
        where b_no=#{bNo}
    </update>

<!--  코멘트 삭제-->
    <delete id="deleteComment" parameterType="int">
        delete from qna_comment
        where c_no = #{cNo}
    </delete>
</mapper>